[
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.3)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.39)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.23)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.24)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.5), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=3, filter_spacing=0.24), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.34), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.5
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.24
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.34
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.14, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.19, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.14,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=5, filter_spacing=0.25), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.19, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.25
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.25, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.36, activation_function=ReLU), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.36,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.49, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.49,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=7, filter_spacing=0.29, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.29,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=5, filter_spacing=0.42, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.42,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.4)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.44, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.18), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.44,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.18
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.39, activation_function=ReLU), FeedForwardLayer(num_nodes=7), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.39,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.34), FeedForwardLayer(num_nodes=7), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.34
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.46, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.46,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.4)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.42)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.15, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.33, activation_function=ReLU), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.33,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.33), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.33
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.3)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.25, activation_function=ReLU), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.15)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.32)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=7, filter_spacing=0.13, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.12)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.44)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=7, filter_spacing=0.33), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.33
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.18)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=7, filter_spacing=0.22, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.22,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.39, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.39,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.29)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.34), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.34
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=7, filter_spacing=0.18, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.18,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.42)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.23, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.16)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.32, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.38, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.32,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.38,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=3, filter_spacing=0.47), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.47
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.46, activation_function=Sigmoid), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.46,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.21, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.22, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.21,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.45), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.45
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.11), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.11
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.25), FeedForwardLayer(num_nodes=7), layer_spacing: 0.1)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.25
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.18)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=3, filter_spacing=0.41), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.23), Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=7, filter_spacing=0.25, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.41
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.23
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.25,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.36)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.42, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.42,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.13, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.14)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.11)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.34, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.37), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.34,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.37
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.42), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=7, filter_spacing=0.27, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.42
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.27,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.25)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.45), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.27, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.27, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.45
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.27,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.27,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.4)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.19, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.28), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.28
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.45)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.41)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.12)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.29)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=3, filter_spacing=0.33, activation_function=ReLU), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.33,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.15)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=7, filter_spacing=0.11), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.12, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.46, activation_function=ReLU), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.11
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.12,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.46,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.42)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.36)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.31)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.12, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.12,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.25, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.3, activation_function=ReLU), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.3,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=3, filter_spacing=0.22, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=3, filter_spacing=0.2), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.22,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.2
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.34)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.25)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.2), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=7, filter_spacing=0.12, activation_function=ReLU), layer_spacing: 0.14)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.2
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.12,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.5), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=7, filter_spacing=0.16), FeedForwardLayer(num_nodes=3), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.5
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.16
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=5, filter_spacing=0.11, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.11,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.16)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.28)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.37), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.16), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.37
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.16
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.15)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=5, filter_spacing=0.34), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.34
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.5)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.15)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), layer_spacing: 0.23)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.21, activation_function=Sigmoid), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.21,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.21), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.43), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.21
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.43
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.32, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.38, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.32,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.38,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.27), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.21), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.43, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.27
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.21
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.43,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), layer_spacing: 0.27)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.35)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=3, filter_spacing=0.36), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.24, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.34, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.36
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.24,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.34,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=7, filter_spacing=0.36), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.36
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.34, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.34,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=3, filter_spacing=0.28), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.28
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=7, filter_spacing=0.35, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=3, filter_spacing=0.28, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.48, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.32, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.35,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.28,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.32,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.13)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=5, filter_spacing=0.36), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=5, filter_spacing=0.14, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.31), FeedForwardLayer(num_nodes=7), layer_spacing: 0.2)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.36
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.14,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.31
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.26, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.26,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.23)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.13), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.13
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=7, filter_spacing=0.33, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.47, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.5)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.33,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.47,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=5, filter_spacing=0.48, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=7, filter_spacing=0.17, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.27)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.47, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=7, filter_spacing=0.26, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.47,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.26,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.13, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.13,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.32)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.48)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.45)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=5, filter_spacing=0.2, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.2,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.33)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.22)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.12), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.12
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.21), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.44, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.46), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.43, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.21
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.44,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.46
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.43,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=5, filter_spacing=0.45, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.45,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.29)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.42), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.31, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.42
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.31,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.25, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.2)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=7, filter_spacing=0.15, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.15,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.36)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.43, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.29), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.15, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.43,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.29
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.15,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.21)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.13)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.41, activation_function=Sigmoid), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.41,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.34, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.42, activation_function=ReLU), layer_spacing: 0.26)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.34,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.42,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.22, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.22, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.18)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.22,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.48)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.29)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.33)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.42), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.42
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.2)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.47)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=7, filter_spacing=0.17), FeedForwardLayer(num_nodes=7), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.17
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.27)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.17)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.4, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.4,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.23)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.22, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.23), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=7, filter_spacing=0.3), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.23
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.3
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.27, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.27,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=5, filter_spacing=0.39), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.16, activation_function=Sigmoid), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.39
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.16,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), layer_spacing: 0.33)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.2)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.39, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.1, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.39,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.1,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.13, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=3, filter_spacing=0.27), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.23), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.26, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.27
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.23
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.42), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.42
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.11)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.48)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.11, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=7, filter_spacing=0.49, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.11,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.49,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.38)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.21), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.21
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), layer_spacing: 0.16)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.41, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.41,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.17, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), layer_spacing: 0.1)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.17,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.36)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.43)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.13, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.26, activation_function=ReLU), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.13,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.26,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.48)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.18, activation_function=Sigmoid), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.18,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.25, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.46), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.46
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.26)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.46), FeedForwardLayer(num_nodes=7), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.46
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.38)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=3, filter_spacing=0.24, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=5, filter_spacing=0.3, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=3, filter_spacing=0.48, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.24,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.3,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.16), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.16
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.48), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.15), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.48
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.15
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.26), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.19), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.26
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.19
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.28, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.39, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.28,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.39,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=3, filter_spacing=0.31, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.26, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.3, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.31,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.26,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.3,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.5, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.14, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.36, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.24, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.5,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.14,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.36,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.24,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.15), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.15
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.34, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.4, activation_function=ReLU), FeedForwardLayer(num_nodes=7), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.34,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.4,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.27)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.12, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=3, filter_spacing=0.25, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.12,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), layer_spacing: 0.36)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.41)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.49)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=3, filter_spacing=0.14, activation_function=Sigmoid), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.14,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.49)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.19)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.33), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.18)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.33
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.21, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.21,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.27, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.27,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=5, filter_spacing=0.29, activation_function=Sigmoid), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.29,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.31, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=7, filter_spacing=0.14), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.31,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.14
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.11, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.11, activation_function=Sigmoid), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.11,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.11,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.45), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.45
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.23)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=5, filter_spacing=0.37, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.43, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.37,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.43,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.33, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.33,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=5, filter_spacing=0.4, activation_function=Sigmoid), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.4,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.31, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.31,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.26)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.27)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.26), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.18), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.26
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.18
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.27, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.27,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.26, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.45), FeedForwardLayer(num_nodes=5), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.45
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=5, filter_spacing=0.25, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.46, activation_function=ReLU), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.14)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.46,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.2)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.37)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=7, filter_spacing=0.4), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.4
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.12)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.39)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.48, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.39), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.39
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=7, filter_spacing=0.46, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=5, filter_spacing=0.15), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.35), FeedForwardLayer(num_nodes=3), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.46,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.15
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.35
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.4), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.4
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=5, filter_spacing=0.49, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=5, filter_spacing=0.33), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.33
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=5, filter_spacing=0.38, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.14)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.38,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.14, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.14,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.19, activation_function=Sigmoid), layer_spacing: 0.14)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.19,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.14, activation_function=ReLU), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.14,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.48)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.23, activation_function=ReLU), FeedForwardLayer(num_nodes=7), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.17)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=5, filter_spacing=0.48, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.12)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.24)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.41)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.27, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.45, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.27,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.45,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.26, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.14, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=5, filter_spacing=0.22, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.14,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=5, filter_spacing=0.38), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.38
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.36, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.36,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.46, activation_function=ReLU), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.46,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.25, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.13, activation_function=ReLU), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.25,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.19)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.22)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.26, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.13, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=7, filter_spacing=0.49, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.29), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.49,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.29
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.15, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.26)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.45, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=7, filter_spacing=0.28, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.45,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.28,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.33)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.2, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.2,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.44, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.43, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.43,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=5, filter_spacing=0.44, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.18)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.3, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.3,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.25), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.25
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.28, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.25, activation_function=ReLU), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.28,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=3, filter_spacing=0.17, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.2)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.49), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.27, activation_function=ReLU), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.49
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.27,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.46), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=7, filter_spacing=0.36), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.39, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.46
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.36
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.39,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.19, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.19,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.47)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.41, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.41, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.46, activation_function=ReLU), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.41,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.41,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.46,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.32, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.1)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.32,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=5, filter_spacing=0.31), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.31
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.18)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.19)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=7, filter_spacing=0.21), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.21
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.42)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.13, activation_function=ReLU), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.12)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.34), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.34
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.31), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.28, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.31
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.28,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.47), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.49, activation_function=ReLU), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.47
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.41)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=5, filter_spacing=0.14, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), layer_spacing: 0.26)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.14,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.15)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.47, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.47,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.2, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.2,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.22, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=7, filter_spacing=0.19, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.13, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=5, filter_spacing=0.23, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.18)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=5, filter_spacing=0.31), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.48), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.31
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.48
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.2)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.13), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.25), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.23, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.13
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.25
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.48, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=5, filter_spacing=0.35, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=5, filter_spacing=0.19, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.35,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.35), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.26)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.35
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=3, filter_spacing=0.39, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.39,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.17)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.39, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=5, filter_spacing=0.11, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.39,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.11,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.13, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.1, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.1,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.38)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.28), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.5, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.38), FeedForwardLayer(num_nodes=3), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.28
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.5,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.38
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.41, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=3, filter_spacing=0.32, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.41,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.32,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.3, activation_function=ReLU), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.3,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.35)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.23), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.23
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.28)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.27)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.13, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.22, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.22,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.26, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.35, activation_function=ReLU), layer_spacing: 0.47)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.35,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.37)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.1)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=3, filter_spacing=0.25, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.3)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.46, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.26, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.3, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.46,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.3,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=7, filter_spacing=0.24), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.23), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.24
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.23
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.42, activation_function=Sigmoid), layer_spacing: 0.47)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.42,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.11)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.3), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.3
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.28, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.28,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.34)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.42)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.33, activation_function=Sigmoid), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.33,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.36)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.33)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.41, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.41,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.48)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.49)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=5, filter_spacing=0.22, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.25, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.43), FeedForwardLayer(num_nodes=7), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.43
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.41), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.45, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.41
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.45,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.47, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.47,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.41)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.44, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.38), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.38
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.5, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=5, filter_spacing=0.29, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.5,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.29,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.29), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.29
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.22)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.42)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.15)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.23)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.22)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.27, activation_function=ReLU), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.27,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=3, filter_spacing=0.27), FeedForwardLayer(num_nodes=5), layer_spacing: 0.14)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.27
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.27), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.27
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.28), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.32, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.28
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.32,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.13, activation_function=ReLU), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.18)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.2), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.15, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.2
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.29), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.29
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=5, filter_spacing=0.37, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.37,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.19, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.19,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.22)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.23)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.16)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.38, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.3), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=7, filter_spacing=0.22), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.38,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.3
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.22
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=7, filter_spacing=0.27, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.27,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.36)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.21, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.21,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.3)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.15)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.19, activation_function=Sigmoid), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.19,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.44)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.11)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=7, filter_spacing=0.18), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.18
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.39)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.12, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.14, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.12,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.14,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=5, filter_spacing=0.27, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=3, filter_spacing=0.15), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.27,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.15
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.12)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.21, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=3, filter_spacing=0.48, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.13, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.21,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.48,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.13,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.44)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.17)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.21, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.21,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.29)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.24)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.45, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.45,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.38, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.3), Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=5, filter_spacing=0.41, activation_function=ReLU), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.38,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.3
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.41,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.2), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.17, activation_function=ReLU), FeedForwardLayer(num_nodes=7), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.23, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=5, filter_spacing=0.45, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=7, filter_spacing=0.17), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.45,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.17
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.16)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.23, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.22), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.22
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.32)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.29, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.29,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.15), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=3, filter_spacing=0.29), Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.38, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.15
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.29
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.38,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.44, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.29, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.29,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.27, activation_function=ReLU), FeedForwardLayer(num_nodes=7), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.27,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.45), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.1)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.45
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.35)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.19)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.21, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.5, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.21,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.5,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.32, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.44, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.38, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.32,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.38,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.21)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.5)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.23), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.23
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.35), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.35
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.28, activation_function=ReLU), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.28,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.36), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.16), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.36
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.16
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=7, filter_spacing=0.42, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.16, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.35, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.42,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.16,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.35,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), layer_spacing: 0.28)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=5, filter_spacing=0.2, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.41, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.2,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.41,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.27, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.27,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.48), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.48
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.5, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.5,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=5, filter_spacing=0.41), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.41
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.3)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.34, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.34,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=3, filter_spacing=0.16, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.16,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.1)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=3, filter_spacing=0.41, activation_function=ReLU), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.41,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.14)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=7, filter_spacing=0.2, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.47, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.15, activation_function=ReLU), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.2,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.47,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.15,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.49)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.27, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.49, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.27,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=7, filter_spacing=0.12, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.31), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.12,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.31
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.26)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=7, filter_spacing=0.34, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.21), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.45, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.39, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.34,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.21
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.45,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.39,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.34, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.34,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.17)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.38)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.16)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.45), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.29), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.46), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.45
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.29
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.46
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.2, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.2)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.2,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.37)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.37, activation_function=ReLU), FeedForwardLayer(num_nodes=7), layer_spacing: 0.47)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.37,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.4)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.31, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.31,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.21, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=5, filter_spacing=0.28, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.21,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.28,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.3, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.3,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.27), Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.15, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.5)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.27
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.15,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.34, activation_function=ReLU), FeedForwardLayer(num_nodes=7), layer_spacing: 0.2)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.34,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.48), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.48
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.26), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.43, activation_function=ReLU), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.26
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.43,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.1), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.1
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.18), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.29), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.47), FeedForwardLayer(num_nodes=3), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.18
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.29
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.47
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.32, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.32,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.31)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.3)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.13)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=5, filter_spacing=0.26), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.26
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.2), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.24, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.29), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.2
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.24,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.29
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.39)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.33), FeedForwardLayer(num_nodes=5), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.33
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.39)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.39), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.39
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.47)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.49, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.18)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.12), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.12
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=7, filter_spacing=0.15, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.41, activation_function=ReLU), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.41,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.39)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.37, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.11), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.11), FeedForwardLayer(num_nodes=3), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.37,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.11
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.11
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.49)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.13, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.18, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.47)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.18,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.21), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.21
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.19)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.49, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.49,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.43)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.39, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.11, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.39,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.11,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.48), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.44), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.48
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.44
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.3)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.19)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.41), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.41
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.12, activation_function=ReLU), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.12,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.46, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.26, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.38, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.46,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.26,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.38,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.41, activation_function=ReLU), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.41,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.11, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.49), FeedForwardLayer(num_nodes=3), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.11,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.49
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.19, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.43), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.35, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.43
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.35,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.41)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.45, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.45,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.13, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.15, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.17, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.15,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.5, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.45, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.44, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.5,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.45,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.33)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.39, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.39,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.46)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.32), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.44), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.32
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.44
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.48)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.26)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.17)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.46)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.27)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.42)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.16)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.14, activation_function=Sigmoid), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.14,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.44, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.22, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.44,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.31, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.31,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.28)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.28), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.39), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.47), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.28
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.39
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.47
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.44, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.32, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=3, filter_spacing=0.23, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.44,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.32,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.37), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.31, activation_function=Sigmoid), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.37
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.31,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.42)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.33)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.13), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.22, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.13
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.34), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.34
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.28)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.38, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.2, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.38,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.2,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.31, activation_function=ReLU), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.31,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=3, filter_spacing=0.45, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.2), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.45,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.1)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.47, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.47,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.23, activation_function=ReLU), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.15), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.31, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.15
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.31,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.49, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.48), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.49,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.48
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.44, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.11), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.11
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.18, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.1, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.18,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.1,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.43, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.43,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.25, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.25,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.22, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.35), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.22,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.35
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.48)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.13)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.18, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.18,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.4), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.17)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.25, activation_function=ReLU), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.17, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.35, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.17,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.35,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.32)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=5, filter_spacing=0.47, activation_function=ReLU), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.47,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.48)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.31)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.34, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.47), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.2)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.34,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.47
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.47, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=7, filter_spacing=0.21), FeedForwardLayer(num_nodes=5), layer_spacing: 0.47)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.47,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.21
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.42), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.42
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.29), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.29
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.44, activation_function=ReLU), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.11), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.21), FeedForwardLayer(num_nodes=7), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.11
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.21
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.28, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.28,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=5, filter_spacing=0.17), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.17
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.48, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.47), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.47
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=7, filter_spacing=0.31, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.29, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.16), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.31,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.29,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.16
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=5, filter_spacing=0.44, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=7, filter_spacing=0.49), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.11, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.49
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.11,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.4)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=7, filter_spacing=0.25), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.25
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.38, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.17, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.38,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.42)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.37, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.18)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.37,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.44, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.13, activation_function=ReLU), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.38, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.39), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.15, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.38,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.39
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.15,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.38, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.33), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.38,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.33
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.24)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.29, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.29,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.5, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.5,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.21)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=3, filter_spacing=0.2), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.2
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=5, filter_spacing=0.28), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.12, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.28
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.12,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=5, filter_spacing=0.31, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.5)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.31,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.26, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.26,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=7, filter_spacing=0.17, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.24, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.24, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.5)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.24,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.24,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.25)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.26), FeedForwardLayer(num_nodes=7), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.26
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.15), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.15
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.16, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.16,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.42)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.39), Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=5, filter_spacing=0.42), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.39
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.42
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.14)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=7, filter_spacing=0.19), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.19
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=3, filter_spacing=0.2, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.2,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.29)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=5, filter_spacing=0.39), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.23, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.39
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.33, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.5)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.33,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.49, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.18, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.27), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.49,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.18,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.27
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=5, filter_spacing=0.18), FeedForwardLayer(num_nodes=3), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.18
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.16)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=5, filter_spacing=0.43, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.43,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=5, filter_spacing=0.49, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.25, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.49,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.18), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.18
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.15, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=5, filter_spacing=0.24, activation_function=ReLU), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.24,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.35)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=7, filter_spacing=0.1, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.14)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.1,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=7, filter_spacing=0.36, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.36,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), layer_spacing: 0.11)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.37, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.47, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.14), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.37,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.47,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.14
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.42, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.1), FeedForwardLayer(num_nodes=5), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.42,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.1
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.36)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.2)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.15)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.35)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=7, filter_spacing=0.14, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.14,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.17, activation_function=ReLU), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=5, filter_spacing=0.47, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.21, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.47,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.21,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.36)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.37)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.3), layer_spacing: 0.14)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.25, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.14, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.27, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.14,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.27,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.48)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.48, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.47, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.47,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.13, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.19, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.34), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.32), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.19,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.34
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.32
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.44, activation_function=Sigmoid), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.44,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.32), FeedForwardLayer(num_nodes=7), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.32
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.38)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=5, filter_spacing=0.45), FeedForwardLayer(num_nodes=5), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.45
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.23)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.12)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.23), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.23
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.34), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.34
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.29, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.29,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.47), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=5, filter_spacing=0.2, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.15, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.47
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.2,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.13), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.13, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.39, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.34), FeedForwardLayer(num_nodes=5), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.13
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.39,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.34
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.32)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.1)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.37)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.17), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.17
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.35)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=5, filter_spacing=0.16, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.49, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.16,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.49, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.15, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.17, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.24, activation_function=ReLU), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.24,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.12, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.12,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.14, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.14,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.31, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.31,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.31, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.25), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.31,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.25
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=5, filter_spacing=0.49, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.24, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.24,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.19, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.24), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.24
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=7, filter_spacing=0.37), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.37
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.41)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.14, activation_function=ReLU), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.14,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.13, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=7, filter_spacing=0.19), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.19
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.36)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.33), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.4, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.33
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.4,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.21)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.24), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.24
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.27)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.43, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.34), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.43,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.34
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.49)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.18), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.11, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.18
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.11,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.23)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.32), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.42, activation_function=ReLU), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.32
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.42,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.5, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.24, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=5, filter_spacing=0.25, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.5,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.24,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.13, activation_function=ReLU), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.14)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.4, activation_function=ReLU), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.4,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.47, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.3), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.48), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.47,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.3
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.48
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.27, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=5, filter_spacing=0.25, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.27,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.33)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.18)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.21, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.47, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.21,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.47,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.11)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.1, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=5, filter_spacing=0.26), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.1,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.26
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.24), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.24
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.12, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.47)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.12,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.35)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.19, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.25), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.19,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.25
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.3)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.29), FeedForwardLayer(num_nodes=3), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.29
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=3, filter_spacing=0.29, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=7, filter_spacing=0.23), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.4, activation_function=ReLU), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.29,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.23
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.4,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), layer_spacing: 0.24)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.15, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.24, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.24,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.17, activation_function=ReLU), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.37, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.37,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.18)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.29)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.46)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.41)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.49, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.2)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.39)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.36), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.22, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.36
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.22,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.2)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.14)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.38, activation_function=Sigmoid), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.38,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.49), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.26), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.49
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.26
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.16)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.46, activation_function=ReLU), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.46,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.29, activation_function=Sigmoid), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.29,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=7, filter_spacing=0.24, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.3, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.24,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.3,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.37)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.49), Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.46), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.13, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.49
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.46
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.39, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.14), FeedForwardLayer(num_nodes=3), layer_spacing: 0.1)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.39,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.14
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.26, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.44), Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=7, filter_spacing=0.29, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.44
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.29,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.19, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.2, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.25, activation_function=ReLU), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.2,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.43, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.43,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.2, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.2,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.34)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.4, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.2, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.32), Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.45, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.4,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.2,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.32
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.45,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=5, filter_spacing=0.23), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.23
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.29, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.37, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.29,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.37,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.3)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.27, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.27,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.41, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.41,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.12, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.12,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.38), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.43, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.15, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.38
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.43,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.15,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.32)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.16)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.25, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.42)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.14)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.43, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.43,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.43)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=7, filter_spacing=0.39), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.39
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.32), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.32
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.46)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.29)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.35)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.37)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.34, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.34,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.19, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.22, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.27, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.27,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.35, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.35,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.39, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=7, filter_spacing=0.19, activation_function=Sigmoid), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.39,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.19,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.28), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.28
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.5)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=5, filter_spacing=0.15, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.39), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.1)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.39
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.17)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.39)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.5), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.42, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.5
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.42,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.35), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.35
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.27)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.27, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.27,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.5, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.2, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.19, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.5,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.2,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=5, filter_spacing=0.11, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.11,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.21)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.31), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.17, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.31
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.17,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.25)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=3, filter_spacing=0.37, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.14, activation_function=ReLU), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.37,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.14,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=3, filter_spacing=0.48, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.42, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.46), Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.19), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.42,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.46
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.19
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=7, filter_spacing=0.21, activation_function=Sigmoid), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.21,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.32, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.32,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.34), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.5, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.1)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.34
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.5,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=5, filter_spacing=0.41, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.41,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.49, activation_function=ReLU), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.48), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.16, activation_function=ReLU), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.48
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.16,
                "activation_function": "ReLU"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.26, activation_function=Sigmoid), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.34)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.32), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.2)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.32
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.35)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=7, filter_spacing=0.31), Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=7, filter_spacing=0.35, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.36, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.31
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.35,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.36,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=7, filter_spacing=0.17), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.17
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.42)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.29)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.12)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.13, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.21), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.13,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.21
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=5, filter_spacing=0.23, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.26, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.24, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.23,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.24,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.46, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.23), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.46,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.23
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.5, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.5)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.5,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.17, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.17,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.36), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.35, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.36
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.35,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.22), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.22
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.47), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.38)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.47
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=7, filter_spacing=0.36, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.16), Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.46), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.36,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.16
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.46
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.11)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.18, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.5)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.18,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.38)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.31), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.13, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.31
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=5, filter_spacing=0.49, activation_function=ReLU), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.18)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.35)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=7, filter_spacing=0.48, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.23, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.18), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.18
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.3)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.1, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.33, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.14), FeedForwardLayer(num_nodes=7), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.1,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.33,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.14
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=5, filter_spacing=0.31), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.31
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.33), FeedForwardLayer(num_nodes=3), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.33
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.4, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.2)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.4,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.27), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.25), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.27
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.25
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.24, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.47)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.24,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.17), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.42, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.18, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.39)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.17
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.42,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.18,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.13, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.31), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.17), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.49), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.25)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.31
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.17
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.49
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.49, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.46, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.26)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.46,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.32, activation_function=ReLU), FeedForwardLayer(num_nodes=7), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.32,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=5, filter_spacing=0.44, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.44,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.37)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), layer_spacing: 0.28)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), layer_spacing: 0.48)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.22, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.22,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.33)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.34)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.29)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.22), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.22
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=7, filter_spacing=0.14, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.14,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=7, filter_spacing=0.4), FeedForwardLayer(num_nodes=3), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.4
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.49)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), layer_spacing: 0.47)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.32)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.2), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.31, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.2
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.31,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.32, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.32,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.5)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.15)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=5, filter_spacing=0.22, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.45)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.35), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=7, filter_spacing=0.17), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.35
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.17
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.29, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.46, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.29,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.46,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.47)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.24)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=7, filter_spacing=0.22), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.22
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.28, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.45, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.19, activation_function=Sigmoid), layer_spacing: 0.2)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.28,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.45,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.19,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.44)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.21), FeedForwardLayer(num_nodes=3), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.21
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.16), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=5), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.16
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=7, filter_spacing=0.26, activation_function=ReLU), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.26,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.13)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.45)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.49)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.13)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.2, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=7, filter_spacing=0.48), Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=7, filter_spacing=0.1), FeedForwardLayer(num_nodes=7), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.2,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.48
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.1
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.38, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.21, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.36, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.38,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.21,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.36,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=5, filter_spacing=0.13, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.46, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.46,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.34)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.32, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.49)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.32,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=3, filter_spacing=0.33), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.16), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.33
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.16
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.47, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.47,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.16)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=5, filter_spacing=0.3), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.25)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.17), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.17
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.5)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.38, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.38,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.23)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.16, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), layer_spacing: 0.5)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.16,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), layer_spacing: 0.27)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.24), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.24
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.41), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=7, filter_spacing=0.49, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.41
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.49,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=7, filter_spacing=0.14, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.12, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.14,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.12,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.34, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=7, filter_spacing=0.34), Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.12, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.34,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.34
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.12,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.33)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=7, filter_spacing=0.32), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.36), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.32
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.36
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.36)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.49)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.29), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.3)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.29
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.28)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=5, filter_spacing=0.34, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.34,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.16, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=7, filter_spacing=0.33), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.16,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.33
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.15, activation_function=ReLU), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.15,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=7, filter_spacing=0.25, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.39, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.42, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.39,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.42,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.43, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.43,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.2)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.33)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.44, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=7, filter_spacing=0.24), FeedForwardLayer(num_nodes=3), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.24
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.33, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.15), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.33,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.15
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.39, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.39), FeedForwardLayer(num_nodes=5), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.39,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.39
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.47), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=7, filter_spacing=0.44, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=3, filter_spacing=0.44, activation_function=ReLU), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.18)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.47
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.43), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.14)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.43
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.36, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.12)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.36,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.24, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.24,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=3, filter_spacing=0.37, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=5, filter_spacing=0.32), Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.34, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.37,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.32
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.34,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.18, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.24), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.36, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.18,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.24
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.36,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=3, filter_spacing=0.27, activation_function=ReLU), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.27,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.15, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=5, filter_spacing=0.33, activation_function=ReLU), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.33,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=7, filter_spacing=0.31, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.14, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.15, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.31,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.14,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.15,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=7, filter_spacing=0.42, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.31), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.45)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.42,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.31
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.31)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.33, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.33,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.33, activation_function=ReLU), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.33,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.13)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.43)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.28), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.28
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=7, filter_spacing=0.48), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.27, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=3, filter_spacing=0.18, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.48
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.27,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.18,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.2)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.32, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.13, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=7, filter_spacing=0.23, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.32,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.3)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.45, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.45,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.39)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.34, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=7, filter_spacing=0.36, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.41, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.34,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.36,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.41,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=7, filter_spacing=0.11, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.11,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.17), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.38, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.17
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.38,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.35), layer_spacing: 0.16)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.35
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.34), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=7, filter_spacing=0.22), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.34
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.22
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.25, activation_function=ReLU), FeedForwardLayer(num_nodes=7), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.45)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.35, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.35,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.22)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=3, filter_spacing=0.25, activation_function=ReLU), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.49)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=5, filter_spacing=0.41), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.41
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.25, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.17, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=7, filter_spacing=0.41, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.25,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.41,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.23, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.23), FeedForwardLayer(num_nodes=5), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.23,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.23
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.1), Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=3, filter_spacing=0.18), FeedForwardLayer(num_nodes=5), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.1
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.18
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.47), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.31, activation_function=Sigmoid), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.47
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.31,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.26, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.32, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.44), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.32,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.44
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=7, filter_spacing=0.32), Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.13), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.32
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.13
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.14, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.14,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.14)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=3, filter_spacing=0.18, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.18,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.29)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.19), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.14), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.26)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.19
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.14
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.46, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.46,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=5, filter_spacing=0.36, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=7, filter_spacing=0.13), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.38), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.36,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.13
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.38
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.44)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.18, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.18,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.3)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.11, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.11,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.47, activation_function=ReLU), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.47,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.17), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.22, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.26)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.17
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.23, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.23,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.13, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.13, activation_function=Sigmoid), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.13,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.13,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=5, filter_spacing=0.41, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.41,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.45)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), layer_spacing: 0.17)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.48, activation_function=Sigmoid), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=3, filter_spacing=0.37, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.37,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.49), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.47)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.49
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.37)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.15, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.2, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.4, activation_function=ReLU), FeedForwardLayer(num_nodes=5), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.2,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.4,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.11, activation_function=ReLU), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.11,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.28)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.37), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.37
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.15, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.15,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.33), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.38, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.47, activation_function=ReLU), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.33
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.38,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.47,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.19, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=5, filter_spacing=0.38), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=7, filter_spacing=0.44, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.38
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.44,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=5, filter_spacing=0.22, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.19)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.22,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.38)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.48, activation_function=ReLU), FeedForwardLayer(num_nodes=3), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.48,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.47)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.45, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.1)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.45,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=5, filter_spacing=0.21), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.37, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.33), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.21
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.37,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.33
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.17), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.17
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.39, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.39,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.45, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.45,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.18), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.18
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=5, filter_spacing=0.44, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.48, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.21), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.42)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.21
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.13, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.11)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.13,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.28)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.42), Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.36), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.42
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.36
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=5, filter_spacing=0.22), Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.42, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.22
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.42,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.32)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.32)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.4)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=7, filter_spacing=0.22, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.22,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=3, filter_size=7, filter_spacing=0.2, activation_function=Sigmoid), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.2,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=5, filter_spacing=0.39), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.39
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=5, filter_spacing=0.19, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.35)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.38), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.1)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.38
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=3, filter_spacing=0.42), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=7, filter_spacing=0.28), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.42
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.28
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.13)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=5, filter_spacing=0.47, activation_function=Sigmoid), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.47,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=5, filter_spacing=0.16, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.16,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.33), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.24)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.33
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=7, filter_spacing=0.25), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=5, filter_spacing=0.24, activation_function=ReLU), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.47)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.25
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.24,
                "activation_function": "ReLU"
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.26, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.25), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.25
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.14)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=5, filter_spacing=0.43, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=3, filter_spacing=0.36, activation_function=Sigmoid), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.15)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.43,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.36,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=7, filter_spacing=0.36, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=3, filter_spacing=0.39), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=7, filter_spacing=0.26), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.36,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.39
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.26
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.45)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.25)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.47)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=5, filter_spacing=0.48, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=7, filter_spacing=0.17), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.35), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.17)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.17
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.35
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.37)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), layer_spacing: 0.36)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.31, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=4, filter_size=3, filter_spacing=0.36), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.37)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.31,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.36
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=3, filter_spacing=0.23, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.35)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.23,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.15), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.41)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.15
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.11, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.26, activation_function=ReLU), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.5)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.11,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.26,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.49)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.2, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.2,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.33, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.43), Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.34), layer_spacing: 0.28)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.33,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.43
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.34
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.1)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.16), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.14)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.16
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=3, filter_spacing=0.3, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=3, filter_spacing=0.44, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.3,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.44,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=7, filter_spacing=0.41, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=5, filter_spacing=0.22), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.32)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.41,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.22
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.43), layer_spacing: 0.21)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.43
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=5, filter_size=5, filter_spacing=0.49, activation_function=Sigmoid), layer_spacing: 0.2)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.49,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.3)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), layer_spacing: 0.4)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.19)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=3, filter_spacing=0.2), Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=7, filter_spacing=0.33, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=7, filter_spacing=0.47, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.2
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.33,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 7,
                "filter_spacing": 0.47,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=1), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.23)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 1
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=6, filter_size=3, filter_spacing=0.42, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=3, feature_map_size=5, filter_size=5, filter_spacing=0.38), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.42,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.38
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=3, filter_spacing=0.29, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.42, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=5), layer_spacing: 0.26)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.29,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.42,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=7, filter_spacing=0.17, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=4, feature_map_size=5, filter_size=5, filter_spacing=0.19, activation_function=ReLU), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.36)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 5,
                "filter_size": 5,
                "filter_spacing": 0.19,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.44)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.16), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.16
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.37, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=3, filter_spacing=0.17, activation_function=Sigmoid), layer_spacing: 0.26)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.37,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.17,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.49)",
        "functions_list": [
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 1
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=5, filter_spacing=0.24, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=5, filter_spacing=0.4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.43)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.24,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.16)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=3, filter_spacing=0.35), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.48)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.35
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.23)",
        "functions_list": [
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=4, filter_size=3, filter_spacing=0.33, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=6, filter_size=3, filter_spacing=0.17, activation_function=ReLU), FeedForwardLayer(num_nodes=7), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.33,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.17,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 7
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=3, filter_size=3, filter_spacing=0.22), Convolutional2DLayer(num_feature_maps=2, feature_map_size=3, filter_size=7, filter_spacing=0.18, activation_function=ReLU), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=4), layer_spacing: 0.47)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.22
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 3,
                "filter_size": 7,
                "filter_spacing": 0.18,
                "activation_function": "ReLU"
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 4
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=4, filter_size=7, filter_spacing=0.26, activation_function=Sigmoid), FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.27)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 4,
                "filter_size": 7,
                "filter_spacing": 0.26,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.21)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=5, filter_size=3, filter_spacing=0.29, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=2, feature_map_size=7, filter_size=3, filter_spacing=0.45), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.31)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.29,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.45
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=4, filter_size=3, filter_spacing=0.26, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=3, filter_size=5, filter_spacing=0.41), layer_spacing: 0.33)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.26,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.41
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=7, filter_spacing=0.48), Convolutional2DLayer(num_feature_maps=5, feature_map_size=6, filter_size=5, filter_spacing=0.47, activation_function=Sigmoid), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 7,
                "filter_spacing": 0.48
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 6,
                "filter_size": 5,
                "filter_spacing": 0.47,
                "activation_function": "Sigmoid"
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), FeedForwardLayer(num_nodes=3), layer_spacing: 0.49)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.4)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=3, filter_spacing=0.21, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.25, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=3), layer_spacing: 0.34)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 3,
                "filter_spacing": 0.21,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.25,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=5, filter_spacing=0.48, activation_function=Sigmoid), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.29)",
        "functions_list": [
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.48,
                "activation_function": "Sigmoid"
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=3), FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.18)",
        "functions_list": [
            "FeedForwardLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 3
            },
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=2, feature_map_size=5, filter_size=3, filter_spacing=0.41, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=3, feature_map_size=7, filter_size=7, filter_spacing=0.4, activation_function=ReLU), Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=5, filter_spacing=0.16), MaxPooling2DLayer(kernel_size=2), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.4)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 2,
                "feature_map_size": 5,
                "filter_size": 3,
                "filter_spacing": 0.41,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 3,
                "feature_map_size": 7,
                "filter_size": 7,
                "filter_spacing": 0.4,
                "activation_function": "ReLU"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.16
            },
            {
                "kernel_size": 2
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=3, filter_size=5, filter_spacing=0.29, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=3, filter_spacing=0.4), FeedForwardLayer(num_nodes=7), layer_spacing: 0.13)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 3,
                "filter_size": 5,
                "filter_spacing": 0.29,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 3,
                "filter_spacing": 0.4
            },
            {
                "num_nodes": 7
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=4, filter_size=5, filter_spacing=0.38, activation_function=Sigmoid), Convolutional2DLayer(num_feature_maps=4, feature_map_size=7, filter_size=5, filter_spacing=0.27), layer_spacing: 0.46)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 4,
                "filter_size": 5,
                "filter_spacing": 0.38,
                "activation_function": "Sigmoid"
            },
            {
                "num_feature_maps": 4,
                "feature_map_size": 7,
                "filter_size": 5,
                "filter_spacing": 0.27
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=7), MaxPooling2DLayer(kernel_size=3), layer_spacing: 0.47)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 7
            },
            {
                "kernel_size": 3
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), layer_spacing: 0.45)",
        "functions_list": [
            "FeedForwardLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=4, feature_map_size=6, filter_size=3, filter_spacing=0.23), layer_spacing: 0.44)",
        "functions_list": [
            "Convolutional2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 4,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.23
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=1, feature_map_size=7, filter_size=3, filter_spacing=0.47, activation_function=Sigmoid), FeedForwardLayer(num_nodes=3), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), layer_spacing: 0.22)",
        "functions_list": [
            "Convolutional2DLayer",
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 1,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.47,
                "activation_function": "Sigmoid"
            },
            {
                "num_nodes": 3
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(FeedForwardLayer(num_nodes=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=5), MaxPooling2DLayer(kernel_size=4), MaxPooling2DLayer(kernel_size=2), layer_spacing: 0.24)",
        "functions_list": [
            "FeedForwardLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_nodes": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 5
            },
            {
                "kernel_size": 4
            },
            {
                "kernel_size": 2
            }
        ]
    },
    {
        "text": "",
        "code": "nn=NeuralNetwork(Convolutional2DLayer(num_feature_maps=5, feature_map_size=7, filter_size=3, filter_spacing=0.31), Convolutional2DLayer(num_feature_maps=2, feature_map_size=6, filter_size=3, filter_spacing=0.38), MaxPooling2DLayer(kernel_size=1), layer_spacing: 0.23)",
        "functions_list": [
            "Convolutional2DLayer",
            "Convolutional2DLayer",
            "MaxPooling2DLayer"
        ],
        "args_list": [
            {
                "num_feature_maps": 5,
                "feature_map_size": 7,
                "filter_size": 3,
                "filter_spacing": 0.31
            },
            {
                "num_feature_maps": 2,
                "feature_map_size": 6,
                "filter_size": 3,
                "filter_spacing": 0.38
            },
            {
                "kernel_size": 1
            }
        ]
    }
]